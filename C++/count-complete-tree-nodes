//Given a complete binary tree, count the number of nodes.
//
//Definition of a complete binary tree from Wikipedia:
//In a complete binary tree every level, except possibly the last, is completely filled, 
//and all nodes in the last level are as far left as possible. 
//It can have between 1 and 2h nodes inclusive at the last level h.

class Solution {
private:
	int count_side (TreeNode *root, bool isLeft) {
		if (root == NULL) return 0;
		int count = 0;
		while (root != NULL) {
			if(isLeft)root = root->left;
			else root = root->right;
			count++;
		}
		return count;
	}
public:
    int countNodes(TreeNode* root) {
        if (root == NULL) return 0;
    	int left = count_side (root, true);
    	int right = count_side (root, false);
    	if (left == right) return (1 << left) - 1;
    	else return (countNodes(root->right) + countNodes(root->left) + 1);
    }
};
